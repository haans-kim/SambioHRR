{
  "permissions": {
    "allow": [
      "Bash(curl:*)",
      "Bash(sqlite3:*)",
      "Bash(npm run dev:*)",
      "Bash(find:*)",
      "Bash(lsof:*)",
      "Bash(kill:*)",
      "Bash(ls:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(for i in {1..5})",
      "Bash(do echo \"=== 조회 $i ===\")",
      "Bash(done)",
      "Bash(git restore:*)",
      "Bash(npm run build:*)",
      "Bash(git checkout:*)",
      "Bash(npm uninstall:*)",
      "Bash(npm install:*)",
      "Bash(rmdir:*)",
      "Bash(gh repo create:*)",
      "Bash(npx tsx:*)",
      "WebFetch(domain:claude.ai)",
      "Bash(for table in eam_data equis_data lams_data mdm_data mes_data)",
      "Bash(do echo \"=== $table ===\")",
      "Bash(for table in eam_data equis_data mdm_data)",
      "Bash(do echo \"=== $table - 2025년 6월 데이터 ===\")",
      "Read(//var/folders/cg/hnykq8n5159dxh1w7lmpmcsc0000gn/T/TemporaryItems/NSIRD_screencaptureui_xTNC11/**)",
      "Bash(npx tsc:*)",
      "Read(//var/folders/cg/hnykq8n5159dxh1w7lmpmcsc0000gn/T/TemporaryItems/NSIRD_screencaptureui_IGceb1/**)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_snapshot",
      "Read(//var/folders/cg/hnykq8n5159dxh1w7lmpmcsc0000gn/T/TemporaryItems/NSIRD_screencaptureui_KitZFV/**)",
      "Bash(pip3 install:*)",
      "Bash(python3:*)",
      "Read(//var/folders/cg/hnykq8n5159dxh1w7lmpmcsc0000gn/T/TemporaryItems/NSIRD_screencaptureui_sutqy3/**)",
      "Bash(time curl:*)",
      "Bash(for month in 2025-01 2025-03 2025-05)",
      "Bash(do)",
      "Bash(echo \"Month: $month\")",
      "Bash(for page in center division ground-rules-insights statistics team group)",
      "Bash(do if [ -f \"app/$page/page.tsx\" ])",
      "Bash([ -d \"app/$page\" ])",
      "Bash(then echo \"=== $page ===\" head -20 \"app/$page/page.tsx\")",
      "Bash(awk:*)",
      "Read(//Users/hanskim/Projects/SambioHR5/**)",
      "Bash(for table in meal_data knox_approval_data knox_mail_data knox_pims_data eam_data equis_data lams_data mes_data mdm_data)",
      "Bash(venv/bin/python:*)",
      "Bash(open http://localhost:3003/data-upload)",
      "Bash(xargs kill:*)",
      "Bash(for table in claim_data meal_data knox_approval_data knox_mail_data knox_pims_data eam_data equis_data lams_data mes_data mdm_data)",
      "Bash(do echo \"=== $table ===\" sqlite3 sambio_human.db \"PRAGMA table_info($table);\")",
      "Bash(./excel-upload-server/venv/bin/streamlit run excel-upload-server/streamlit_app.py --server.port 8501)",
      "Bash(./venv/bin/streamlit run streamlit_app.py --server.port 8501)",
      "Bash(./venv/bin/pip list)",
      "Bash(for table in tag_data claim_data meal_data knox_approval_data knox_mail_data knox_pims_data eam_data equis_data lams_data mes_data mdm_data)",
      "Bash(echo \"Adding uploaded_at to $table\")",
      "Bash(git stash:*)",
      "Bash(git add:*)",
      "Bash(npx next build)",
      "Bash(nvm use:*)",
      "Bash(npx next dev:*)",
      "Bash(taskkill //F //PID 18904)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(taskkill //F //PID 27588)",
      "Bash(venvScriptspip install -r requirements.txt)",
      "Bash(venv/Scripts/pip install:*)",
      "Bash(mkdir:*)",
      "Bash(pkill:*)",
      "Bash(npm run electron:build:win:*)",
      "Bash(tasklist:*)",
      "Bash(for file in app/page.tsx app/division/page.tsx app/enterprise/page.tsx app/insight2/page.tsx app/organization/page.tsx app/trends/page.tsx app/groups/page.tsx app/individual/page.tsx app/data-upload/page.tsx)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(taskkill:*)",
      "Bash(for pid in 17604 12904)",
      "Bash(do taskkill //F //PID $pid)",
      "Bash(dir:*)",
      "Bash(npx asar:*)",
      "Bash(cat:*)",
      "Bash(timeout:*)",
      "Bash(rm:*)",
      "Bash(start SambioHRR.exe)",
      "Bash(npm run electron:compile:*)",
      "Bash(electron-builder:*)",
      "Bash(npx electron-builder:*)",
      "Read(//c/Users/**)",
      "Bash(ELECTRON_BUILD=true npm run build:*)",
      "Read(//c/SambioHRData/**)",
      "Bash(mv:*)",
      "Bash(git push:*)",
      "Bash(git reset:*)",
      "Bash(git commit:*)",
      "Bash(node scripts/check-monthly-grade-stats.js:*)",
      "Bash(node scripts/check-claim-data-months.js:*)",
      "Bash(xargs:*)",
      "Bash(node:*)",
      "Bash(npx electron:*)",
      "Bash(electron:*)",
      "Bash(powershell -Command \"Get-Item ''C:\\SambioHRData\\sambio_human.db'' | Select-Object Name, Length, LastWriteTime\")",
      "Bash(powershell -Command \"Get-Item ''C:\\Project\\SambioHRR\\sambio_human.db'' | Select-Object Name, Length, LastWriteTime, LinkType, Target\")"
    ],
    "deny": []
  }
}
